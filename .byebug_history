c
donates.size
c
donates.size
doantes.size
c
donates.size
donates
c
!t.include?("Seoyeon")
t.include?("Seoyeon")
t.include?("Rick")
t = TtsService::VOICES
c
params["new_webhook_url"]
params[:new_webhook_url]
body
c
current_user.is_admin?
current_user
c
n
current_user.is_admin?
c
@request
response.parsed_body[:access_token]
@request.headers
c
response.parsed_body[:access_token]
response.parsed_body.access_token
response.parsed_body
response
c
response
token
c
response.status
response
c
user
params
c
decoded_token
c
tkn = JWT.decode(token_jwt, SECRET_KEY, true, algorithm: "HS256").first
tkn
c
Token.find_by(jwt: token_jwt)
Token.find_by(jwt: token_jwt, token_type: "refresh")
token_jwt
token
c
return tkn.jwt if tkn
tkn.present?
tkn
